apiVersion: v1
kind: Pod
metadata:
  name: test1
  labels:
    app: nfs-test
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - nfs-test
          topologyKey: kubernetes.io/hostname
  containers:
  - name: container
    image: python
    imagePullPolicy: Always
    command:
    - /usr/bin/env
    - bash
    stdin: true
    tty: true
    volumeMounts:
    - name: nfs
      mountPath: "/mnt"
  volumes:
  - name: nfs
    persistentVolumeClaim:
      claimName: nfs
---
apiVersion: v1
kind: Pod
metadata:
  name: test2
  labels:
    app: nfs-test
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - nfs-test
          topologyKey: kubernetes.io/hostname
  containers:
  - name: container
    image: python
    imagePullPolicy: Always
    command:
    - /usr/bin/env
    - bash
    stdin: true
    tty: true
    volumeMounts:
    - name: nfs
      mountPath: "/mnt"
  volumes:
  - name: nfs
    persistentVolumeClaim:
      claimName: nfs
---
apiVersion: v1
kind: Pod
metadata:
  name: test3
  labels:
    app: nfs-test
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - nfs-test
          topologyKey: kubernetes.io/hostname
  containers:
  - name: container
    image: python
    imagePullPolicy: Always
    command:
    - /usr/bin/env
    - bash
    stdin: true
    tty: true
    volumeMounts:
    - name: nfs
      mountPath: "/mnt"
  volumes:
  - name: nfs
    persistentVolumeClaim:
      claimName: nfs
---
apiVersion: v1
kind: Pod
metadata:
  name: test4
  labels:
    app: nfs-test
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - nfs-test
          topologyKey: kubernetes.io/hostname
  containers:
  - name: container
    image: bash
    imagePullPolicy: Always
    command:
    - /usr/bin/env
    - bash
    stdin: true
    tty: true
    volumeMounts:
    - name: nfs
      mountPath: "/mnt"
  volumes:
  - name: nfs
    persistentVolumeClaim:
      claimName: nfs
